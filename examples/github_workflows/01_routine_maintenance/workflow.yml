---
name: Scheduled Maintenance Task

on:
    # Allow manual trigger with custom parameters
    workflow_dispatch:
        inputs:
            agent_script:
                description: >-
                    URL or path to the Python script for the maintenance task
                required: false
                type: string
                default: >-
                    https://raw.githubusercontent.com/All-Hands-AI/agent-sdk/main/examples/github_workflows/01_routine_maintenance/agent_script.py
            prompt_location:
                description: URL or file path to the prompt
                required: false
                type: string
                default: ''
            llm_model:
                description: LLM model to use
                required: false
                type: string
                default: openhands/claude-sonnet-4-5-20250929
            llm_base_url:
                description: Optional base URL for the LLM API
                required: false
                type: string
    # Scheduled trigger (disabled by default, uncomment and customize as needed)
    # When using schedule, set PROMPT_LOCATION in the env section below
    # schedule:
    #   # Run at 2 AM UTC every day
    #   - cron: "0 2 * * *"

permissions:
    contents: write
    pull-requests: write
    issues: write

jobs:
    run-maintenance-task:
        runs-on: ubuntu-latest
        env:
            # For scheduled runs, set the prompt location here (URL or file path)
            # This will be used when the workflow is triggered by schedule
            # For manual runs, the input.prompt_location will be used instead
            SCHEDULED_PROMPT_LOCATION: ''
            # Example:
            # SCHEDULED_PROMPT_LOCATION: 'https://example.com/prompts/daily-maintenance.txt'
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: '3.12'

            - name: Install uv
              uses: astral-sh/setup-uv@v6
              with:
                  enable-cache: true

            - name: Install dependencies
              run: uv sync --frozen --group dev

            - name: Check required environment variables
              env:
                  LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
                  LLM_MODEL: >-
                      ${{ secrets.LLM_MODEL || inputs.llm_model ||
                      'openhands/claude-sonnet-4-5-20250929' }}
                  LLM_BASE_URL: ${{ secrets.LLM_BASE_URL || inputs.llm_base_url }}
              run: |
                  if [ -z "$LLM_API_KEY" ]; then
                    echo "Error: LLM_API_KEY secret is not set."
                    exit 1
                  fi

                  echo "Using LLM model: $LLM_MODEL"
                  if [ -n "$LLM_BASE_URL" ]; then
                    echo "Using LLM base URL: $LLM_BASE_URL"
                  fi

            - name: Run maintenance task
              env:
                  LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
                  LLM_MODEL: >-
                      ${{ secrets.LLM_MODEL || inputs.llm_model ||
                      'openhands/claude-sonnet-4-5-20250929' }}
                  LLM_BASE_URL: ${{ secrets.LLM_BASE_URL || inputs.llm_base_url }}
                  AGENT_SCRIPT: >-
                      ${{ inputs.agent_script ||
                      'https://raw.githubusercontent.com/All-Hands-AI/agent-sdk/main/examples/github_workflows/01_routine_maintenance/agent_script.py' }}
                  PROMPT_LOCATION: >-
                      ${{ inputs.prompt_location || env.SCHEDULED_PROMPT_LOCATION }}
                  PYTHONPATH: ''
              run: |
                  echo "Running agent script: $AGENT_SCRIPT"
                  echo "With prompt from: $PROMPT_LOCATION"

                  # Validate prompt location is set
                  if [ -z "$PROMPT_LOCATION" ]; then
                    echo "Error: PROMPT_LOCATION is not set."
                    echo "For manual runs: Provide 'prompt_location' input"
                    echo "For scheduled runs: Set SCHEDULED_PROMPT_LOCATION in the workflow file"
                    exit 1
                  fi

                  # Download script if it's a URL
                  if [[ "$AGENT_SCRIPT" =~ ^https?:// ]]; then
                    echo "Downloading agent script from URL..."
                    curl -sSL "$AGENT_SCRIPT" -o /tmp/agent_script.py
                    AGENT_SCRIPT_PATH="/tmp/agent_script.py"
                  else
                    AGENT_SCRIPT_PATH="$AGENT_SCRIPT"
                  fi

                  uv run python "$AGENT_SCRIPT_PATH" "$PROMPT_LOCATION"

            - name: Upload logs as artifact
              uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: maintenance-task-logs
                  path: |
                      *.log
                      output/
                  retention-days: 7
