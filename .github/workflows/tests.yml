name: Run tests
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["**"]

permissions:
  contents: write
  pull-requests: write

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Install dependencies
        run: uv sync --frozen --group dev
        
      - name: Run tests with coverage
        run: |
          CI=true uv run pytest \
            -vvxss \
            --basetemp="${{ runner.temp }}/pytest" \
            -o tmp_path_retention=none \
            -o tmp_path_retention_count=0 \
            --cov=openhands/core \
            --cov=openhands/tools \
            --cov-report=term-missing \
            openhands/core/tests openhands/tools/tests tests

      - name: Build coverage XML (separate step, lower mem)
        if: always()
        run: uv run coverage xml -i -o coverage.xml


      - name: Collapse coverage packages to depth 3
        if: always()
        run: uv run python .github/collapse_cobertura.py coverage.xml coverage_collapsed.xml --max-depth 3

      - name: Code Coverage Summary
        if: ${{ always() && hashFiles('coverage_collapsed.xml') != '' }}
        continue-on-error: true
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage_collapsed.xml
          badge: true
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both

      - name: Add Coverage PR Comment
        if: ${{ always() && github.event_name == 'pull_request' }}
        continue-on-error: true
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: Coverage Report
          path: code-coverage-results.md

      - name: Parse coverage percent
        if: ${{ always() && github.event_name == 'pull_request' }}
        id: parsecov
        run: |
          python - << 'PY'
          import xml.etree.ElementTree as ET
          import math
          p = 'coverage.xml'
          try:
              root = ET.parse(p).getroot()
              lr = root.attrib.get('line-rate')
              pct = int(round(float(lr) * 100)) if lr is not None else 0
          except Exception:
              pct = 0
          print(f"coverage_percent={pct}")
          with open("coverage_percent.txt", "w") as f:
              f.write(str(pct))
          PY

      - name: Determine badge color
        if: ${{ always() && github.event_name == 'pull_request' }}
        id: color
        run: |
          PCT=$(cat coverage_percent.txt || echo 0)
          if [ "$PCT" -ge 90 ]; then COLOR=brightgreen; 
          elif [ "$PCT" -ge 75 ]; then COLOR=green; 
          elif [ "$PCT" -ge 60 ]; then COLOR=yellowgreen; 
          elif [ "$PCT" -ge 50 ]; then COLOR=yellow; 
          else COLOR=red; fi
          echo "color=$COLOR" >> $GITHUB_OUTPUT
          echo "pct=$PCT" >> $GITHUB_OUTPUT

      - name: Ensure docs/assets directory
        if: ${{ always() && github.event_name == 'pull_request' }}
        run: mkdir -p docs/assets

      - name: Generate coverage badge
        if: ${{ always() && github.event_name == 'pull_request' }}
        uses: emibcn/badge-action@v2.0.2
        with:
          label: coverage
          status: "${{ steps.color.outputs.pct }}%"
          color: "${{ steps.color.outputs.color }}"
          path: docs/assets/coverage.svg

      - name: Upload badge artifact (PRs)
        if: ${{ always() && github.event_name == 'pull_request' }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-badge
          path: docs/assets/coverage.svg

      - name: Commit coverage badge (push builds on non-main branches)
        if: ${{ always() && github.event_name == 'push' && github.ref != 'refs/heads/main' }}
        uses: EndBug/add-and-commit@v9
        with:
          add: "docs/assets/coverage.svg"
          message: "docs: update coverage badge [skip ci]"
          default_author: github_actions
